# Generated by Django 5.1.6 on 2025-09-08 13:06

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='成就名稱')),
                ('description', models.TextField(verbose_name='成就描述')),
                ('category', models.CharField(default='General', max_length=50, verbose_name='類別')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='稱號')),
                ('badge_icon', models.CharField(blank=True, max_length=100, null=True, verbose_name='徽章圖標')),
                ('condition_key', models.CharField(max_length=50, verbose_name='條件鍵')),
                ('condition_value', models.IntegerField(default=1, verbose_name='條件值')),
            ],
            options={
                'verbose_name': '成就',
                'verbose_name_plural': '成就',
                'ordering': ['condition_value'],
            },
        ),
        migrations.CreateModel(
            name='DreamTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DreamTrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('trend_data', models.JSONField(verbose_name='趨勢數據')),
            ],
            options={
                'verbose_name': '夢境趨勢',
                'verbose_name_plural': '夢境趨勢',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='chat_files/', verbose_name='檔案')),
                ('sticker', models.CharField(blank=True, max_length=255, null=True, verbose_name='貼圖')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dream_content', models.TextField(verbose_name='夢境內容')),
                ('interpretation', models.TextField(verbose_name='解析結果')),
                ('stress_index', models.IntegerField(default=0, verbose_name='壓力指數')),
                ('emotion_score', models.FloatField(default=0, verbose_name='情緒得分 (%)')),
                ('Happiness', models.FloatField(default=0, verbose_name='快樂 (%)')),
                ('Anxiety', models.FloatField(default=0, verbose_name='焦慮 (%)')),
                ('Fear', models.FloatField(default=0, verbose_name='恐懼 (%)')),
                ('Excitement', models.FloatField(default=0, verbose_name='興奮 (%)')),
                ('Sadness', models.FloatField(default=0, verbose_name='悲傷 (%)')),
                ('advice', models.TextField(blank=True, null=True, verbose_name='心理診斷個人化建議')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '夢境',
                'verbose_name_plural': '夢境',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DreamPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='夢境內容')),
                ('title', models.CharField(default='', max_length=100, verbose_name='標題')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='匿名發布')),
                ('view_count', models.IntegerField(default=0, verbose_name='瀏覽次數')),
                ('emotion_data', models.JSONField(blank=True, default=dict, verbose_name='情緒數據')),
                ('advice', models.TextField(blank=True, null=True, verbose_name='心理診斷個人化建議')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_flagged', models.BooleanField(default=False, verbose_name='是否含有危險字詞')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, to='dreams.dreamtag', verbose_name='標籤')),
            ],
            options={
                'verbose_name': '夢境貼文',
                'verbose_name_plural': '夢境貼文',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DreamComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='評論內容')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dream_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='dreams.dreampost')),
            ],
            options={
                'verbose_name': '夢境評論',
                'verbose_name_plural': '夢境評論',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='標題')),
                ('content', models.TextField(verbose_name='內容')),
                ('is_read', models.BooleanField(default=False, verbose_name='是否已讀')),
                ('is_system_message', models.BooleanField(default=False, verbose_name='是否為系統信')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='創建時間')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='收件人')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL, verbose_name='寄件人')),
            ],
            options={
                'verbose_name': '通知信件',
                'verbose_name_plural': '通知信件',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('USE', '使用'), ('GAIN', '獲得')], max_length=10)),
                ('amount', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TherapyAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('point_change', models.IntegerField(default=0)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_appointments', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TherapyMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='therapy_received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='therapy_sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('is_therapist', models.BooleanField(default=False)),
                ('proof_file', models.FileField(blank=True, null=True, upload_to='therapist_proofs/')),
                ('is_verified_therapist', models.BooleanField(default=False)),
                ('current_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='當前稱號')),
                ('current_badge_icon', models.CharField(blank=True, max_length=100, null=True, verbose_name='當前徽章圖標')),
                ('coin_price', models.PositiveIntegerField(default=10, help_text='每次預約所需點券數')),
                ('unread_notifications_count', models.IntegerField(default=0)),
                ('bio', models.TextField(blank=True, null=True, verbose_name='個人簡介')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='頭像')),
                ('allow_contact_by_therapist', models.BooleanField(default=False)),
                ('specialties', models.TextField(blank=True, help_text='用逗號分隔多個專長，例如：焦慮治療, 兒童心理, 認知行為療法', null=True, verbose_name='專長領域')),
                ('display_badge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='displayed_by_badge', to='dreams.achievement', verbose_name='社群展示徽章')),
                ('display_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='displayed_by_title', to='dreams.achievement', verbose_name='社群展示稱號')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', '待回覆'), ('accepted', '接受'), ('rejected', '拒絕')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('therapist', 'user')},
            },
        ),
        migrations.CreateModel(
            name='DailyTaskRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('task_type', models.CharField(max_length=50)),
                ('completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'date', 'task_type')},
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='dreams.dreamcomment')),
            ],
            options={
                'verbose_name': '評論按讚',
                'verbose_name_plural': '評論按讚',
                'unique_together': {('comment', 'user')},
            },
        ),
        migrations.CreateModel(
            name='DreamRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recommended_dreams', models.ManyToManyField(related_name='recommended_to', to='dreams.dreampost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '夢境推薦',
                'verbose_name_plural': '夢境推薦',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'created_at')},
            },
        ),
        migrations.CreateModel(
            name='DreamShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shared_at', models.DateTimeField(auto_now_add=True)),
                ('dream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dreams.dream')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_dreams', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'therapist', 'dream')},
            },
        ),
        migrations.CreateModel(
            name='DreamShareAuthorization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shared_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorized_clients', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'therapist')},
            },
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='dreams.dreampost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '貼文按讚',
                'verbose_name_plural': '貼文按讚',
                'unique_together': {('post', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlocked_at', models.DateTimeField(auto_now_add=True, verbose_name='解鎖時間')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dreams.achievement', verbose_name='成就')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用戶')),
            ],
            options={
                'verbose_name': '用戶成就',
                'verbose_name_plural': '用戶成就',
                'unique_together': {('user', 'achievement')},
            },
        ),
    ]
